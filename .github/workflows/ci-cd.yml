name: CI CD Salon appointment system

on:
  push:
    branches: [main]
    paths:
      - 'api-gateway/**'
      - 'chat-service/**'
      - 'auth-service/**'
      - 'mail-sender/**'
      - 'discovery/**'
      - 'notification-service/**'
      - 'qr-service/**'
      - 'salon-service/**'
      - 'storage-service/**'

jobs:
  changes:
    name: Trigger build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            api-gateway:
              - 'api-gateway/**'
            chat-service:
              - 'chat-service/**'
            auth-service:
              - 'auth-service/**'
            mail-sender:
              - 'mail-sender/**'
            discovery:
              - 'discovery/**'
            notification-service:
              - 'notification-service/**'
            qr-service:
              - 'qr-service/**'
            salon-service:
              - 'salon-service/**'
            storage-service:
              - 'storage-service/**'

      - name: Check changes for each service
        run: |
          echo "Changed files: ${{ github.event_name }} ${{ github.event.before }}...${{ github.sha }}"
          echo "Changed services: ${{ steps.changes.outputs.services }}"
        env:
          SERVICES: ${{ steps.changes.outputs.services }}
  api-gateway:
    needs: changes
    if: ${{ needs.changes.outputs.api-gateway == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build and Push Docker Image
        run: |
          cd api-gateway
          mvn compile jib:build -Pprod \
            -Djib.to.auth.username=${{ secrets.DOCKER_USERNAME }} \
            -Djib.to.auth.password=${{ secrets.DOCKER_PASSWORD }}
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_SERVER_HOST }}
          username: ${{ secrets.PRODUCTION_SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            sudo docker stop rnbsrva/api-gateway
            sudo docker rmi -f rnbsrva/api-gateway
            cd sas
            sudo docker compose up -d