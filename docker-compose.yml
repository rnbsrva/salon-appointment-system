version: '3'
services:
  mail-sender:
    image: rnbsrva/mail-sender
    container_name: mail-sender
    depends_on:
      - kafka
      - discovery
    networks:
      - broker-kafka
    ports:
      - "1000:1000"
    environment:
      SPRING_PROFILES_ACTIVE: "dev,logging"
      SERVER_PORT: 1000
      SMTP_USERNAME: "orynbasarovaakerke88@gmail.com"
      SMTP_PASSWORD: "zbetlegvaudfrjmg"
      KAFKA_BOOTSTRAP_SERVERS: "http://kafka:29092"
      'eureka.client.enabled': "false"

  discovery:
    image: rnbsrva/discovery
    container_name: discovery
    networks:
      - broker-kafka
    ports:
      - "8761:8761"
    environment:
      'eureka.client.serviceUrl.defaultZone': 'http://discovery:8761/eureka'

  qr-service:
    image: rnbsrva/qr-service
    container_name: qr-service
    networks:
      - broker-kafka
    depends_on:
      - api-gateway
      - discovery
    ports:
      - "8004:8004"
    environment:
      SPRING_PROFILES_ACTIVE: "logging,dev"
      'server.port': 8004
      'eureka.client.enabled': "true"
      'eureka.client.serviceUrl.defaultZone': 'http://discovery:8761/eureka'

  storage-service:
    image: rnbsrva/storage-service
    container_name: storage-service
    networks:
      - broker-kafka
    depends_on:
      - api-gateway
      - discovery
    ports:
      - "8005:8005"
    environment:
      'eureka.client.serviceUrl.defaultZone': 'http://discovery:8761/eureka'
      'spring.minio.endpoint': 'http://46.8.43.125:9000'
      'spring.minio.access-key': 'minioadmin'
      'spring.data.mongodb.uri': 'mongodb://mongo/test'
      'spring.minio.secret-key': 'minioadmin'
      'server.servlet.context-path': '/api/v1/storage'
      SPRING_PROFILES_ACTIVE: "dev,logging"
      SERVER_PORT: 8005
      'server.port' : 8005

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    networks:
      - broker-kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "LISTENER_INTERNAL://kafka:29092,LISTENER_EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "LISTENER_INTERNAL"

  prometheus:
    image: prom/prometheus:v2.37.1
    container_name: prometheus
    networks:
      - broker-kafka
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - mail-sender



  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana
    networks:
      - broker-kafka
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./docker/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password

  salon-service:
    image: rnbsrva/salon-service
    container_name: salon-service
    networks:
      - broker-kafka
    depends_on:
      - kafka
      - discovery
    ports:
      - "8008:8008"
    environment:
      'server.port': 8008
      'spring.datasource.url': 'jdbc:postgresql://ep-raspy-wildflower-49813213.eu-central-1.postgres.vercel-storage.com:5432/verceldb'
      'spring.datasource.username': "default"
      'eureka.client.service-url.defaultZone': 'http://discovery:8761/eureka'
      KAFKA_BOOTSTRAP_SERVERS: "http://kafka:29092"
      'spring.datasource.password': "KmVMtEHJwQ06"
      'spring.profiles.active': "logging,dev"

  redis:
    image: redis
    container_name: redis
    command: "redis-server --appendonly yes --requirepass qwerfvp.o654ijnQWE.RFVP654O.IJN --replica-read-only no"
    networks:
      - broker-kafka
    ports:
      - "6379:6379"

  chat-service:
    image: rnbsrva/chat-service
    container_name: chat-service
    networks:
      - broker-kafka
    depends_on:
      - discovery
      - redis
    ports:
      - "8001:8001"
    environment:
      SERVER_PORT: 8001
      'spring.data.redis.port': 6379
      'spring.data.mongodb.uri': 'mongodb://mongo/test'
      'spring.data.redis.host': "redis"
      'spring.data.redis.password': "qwerfvp.o654ijnQWE.RFVP654O.IJN"
      'eureka.client.service-url.defaultZone': 'http://discovery:8761/eureka'

  notification-service:
    networks:
      - broker-kafka
    image: rnbsrva/notification-service
    container_name: notification-service
    depends_on:
      - discovery
      - kafka
    ports:
      - "8002:8002"
    environment:
      'spring.datasource.url': 'jdbc:postgresql://ep-raspy-wildflower-49813213.eu-central-1.postgres.vercel-storage.com:5432/verceldb'
      'spring.datasource.username': "default"
      'eureka.client.service-url.defaultZone': 'http://discovery:8761/eureka'
      KAFKA_BOOTSTRAP_SERVERS: "http://kafka:29092"
      'spring.datasource.password': "KmVMtEHJwQ06"
      'spring.profiles.active': "logging,dev"
      CHAT_SERVICE_URL: "http://chat-service:8001/api/v1/chat"

  mongo:
    networks:
      - broker-kafka
    image: mongo:6.0
    container_name: mongo
    volumes:
      - mean_urls_data:/data/db
    ports:
      - "27017:27017"

  auth-server:
    networks:
      - broker-kafka
    image: rnbsrva/auth-server
    container_name: auth-server
    depends_on:
      - discovery
      - mongo
      - kafka
    ports:
      - "4000:4000"
    environment:
      'jwt.token.secret': 'dmfeivn3ionfio2n3iopm2il3ngfv32ion3vo2niov3n2ionmvio32nv233von2v3s'
      'eureka.client.service-url.defaultZone': 'http://discovery:8761/eureka'
      KAFKA_BOOTSTRAP_SERVERS: "http://kafka:29092"
      'spring.profiles.active': "logging,dev"
      'spring.data.mongodb.uri': 'mongodb://mongo/test'

  api-gateway:
    networks:
      - broker-kafka
    image: rnbsrva/api-gateway
    container_name: api-gateway
    ports:
      - "4317:4317"
    depends_on:
      - discovery
    environment:
      'eureka.client.enabled': "true"
      'eureka.client.service-url.defaultZone': 'http://discovery:8761/eureka'
      'spring.cloud.gateway.routes.auth-server.url': "http://auth-server:4000/api/v1/"
      'spring.cloud.gateway.routes.chat-service.url': "http://chat-service:8001/api/v1/chat"
      'spring.cloud.gateway.routes.notification-service.url': "http://notification-service:8002/api/v1/notification/graphiql"
      'spring.cloud.gateway.routes.storage-service.url': "http://storage-service:8003/api/v1/storage/"
      'spring.cloud.gateway.routes.qr-service.url': "http://qr-service:8004/api/v1/qr/"
      'spring.cloud.gateway.routes.salon-service.url': "http://salon-service:8008/api/v1/salon-service/"
      'spring.cloud.gateway.routes.discovery.url': "http://discovery:8761/eureka"
      'spring.auth-service.url': 'http://auth-server:4000/api/v1/auth/'
networks:
  broker-kafka:
    driver: bridge
volumes:
  mean_urls_data: {}