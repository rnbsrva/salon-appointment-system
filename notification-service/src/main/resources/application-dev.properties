spring.application.name=notification-service
spring.graphql.graphiql.enabled=true
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_PASSWORD}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=none

spring.cloud.openfeign.client.config.chat-ws-service.url=${CHAT_SERVICE_URL}

spring.application.root-url=${server.schema}:${server.host}:${server.port}${server.servlet.context-path}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
eureka.client.service-url.defaultZone=${EUREKA_URL}
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.consumer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
spring.kafka.consumer.properties.spring.json.add.type.headers=false
spring.kafka.consumer.auto-offset-reset=earliest
server.schema=http
server.host=localhost
server.port=2904
server.servlet.context-path=/api/v1/notification/

management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

resilience4j.circuitbreaker.configs.default.register-health-indicator=true
resilience4j.circuitbreaker.instances.ChatWSServiceFeignClientnotifyNotificationDTO.minimum-number-of-calls=3
resilience4j.circuitbreaker.instances.ChatWSServiceFeignClientnotifyNotificationDTO.failureRateThreshold=50
resilience4j.timelimiter.configs.default.timeout-duration=20s

app.logger.lib.level=INFO
app.logger.lib.name=${spring.application.name}